"""init

Revision ID: 0001
Revises: 
Create Date: 2024-06-09 16:47:17.778040

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0001'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    sa.Enum('CUSTOMER', 'OWNER', 'ADMIN', name='user_role_enum').create(op.get_bind())
    op.create_table('user',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('avatar', sa.String(), nullable=True),
    sa.Column('role', postgresql.ENUM('CUSTOMER', 'OWNER', 'ADMIN', name='user_role_enum', create_type=False), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('first_name', sa.String(), nullable=False),
    sa.Column('last_name', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(length=1024), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), nullable=True),
    sa.Column('updated_at', sa.TIMESTAMP(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    sa.Enum('CUSTOMER', 'OWNER', 'ADMIN', name='user_role_enum').drop(op.get_bind())
    # ### end Alembic commands ###
